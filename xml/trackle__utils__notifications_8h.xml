<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="trackle__utils__notifications_8h" kind="file" language="C++">
    <compoundname>trackle_utils_notifications.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">esp_types.h</includes>
    <includes local="no">esp_timer.h</includes>
    <incdepgraph>
      <node id="1">
        <label>trackle_utils_notifications.h</label>
        <link refid="trackle__utils__notifications_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>esp_timer.h</label>
      </node>
      <node id="3">
        <label>esp_types.h</label>
      </node>
      <node id="2">
        <label>stdbool.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="trackle__utils__notifications_8h_1a0086e55aa5fbe53265f96bd7afbc8d92" prot="public" static="no">
        <name>TRACKLE_MAX_NOTIFICATIONS_NUM</name>
        <initializer>20</initializer>
        <briefdescription>
<para>Max number of notifications that can be created. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="trackle_utils_notifications.h" line="39" column="9" bodyfile="trackle_utils_notifications.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="trackle__utils__notifications_8h_1a853eccf40a39d485f2fd59c78bdc2bb9" prot="public" static="no">
        <name>Trackle_NotificationID_ERROR</name>
        <initializer>-1</initializer>
        <briefdescription>
<para>Value returned on error by functions returning <ref refid="trackle__utils__notifications_8h_1a899e05cc33fea8c942c6562a8dbc2e13" kindref="member">Trackle_NotificationID_t</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="trackle_utils_notifications.h" line="44" column="9" bodyfile="trackle_utils_notifications.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="trackle__utils__notifications_8h_1a899e05cc33fea8c942c6562a8dbc2e13" prot="public" static="no">
        <type>int</type>
        <definition>typedef int Trackle_NotificationID_t</definition>
        <argsstring></argsstring>
        <name>Trackle_NotificationID_t</name>
        <briefdescription>
<para>Type of the ID of an notification. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="trackle_utils_notifications.h" line="49" column="13" bodyfile="trackle_utils_notifications.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="trackle__utils__notifications_8h_1a921414f16a2958bf73395ecfff985219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="trackle__utils__notifications_8h_1a899e05cc33fea8c942c6562a8dbc2e13" kindref="member">Trackle_NotificationID_t</ref></type>
        <definition>Trackle_NotificationID_t Trackle_Notification_create</definition>
        <argsstring>(const char *name, const char *eventName, const char *format, uint16_t scale, uint8_t numDecimals, bool sign)</argsstring>
        <name>Trackle_Notification_create</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>eventName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>numDecimals</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sign</declname>
        </param>
        <briefdescription>
<para>Create a new notification. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name/key to be assigned to the notification. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eventName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the event where to publish the notification (e.g. &quot;machine/speed&quot;) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>Printf style format for the message. It must contain, in order: s for the notification key, u for the level, and s for the value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>Divider to be applied to values used to update the notification (notificationValue = newValue / scale) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numDecimals</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of decimal digits to be used when publishing the notification value to the cloud. It&apos;s used only if scale differs from 1 (otherwise the notification&apos;s value is an integer and it doesn&apos;t make sense). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sign</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the notification&apos;s value is signed, otherwise it&apos;s unsigned. It&apos;s used only if scale equals 1 (otherwise the notification&apos;s value is a floating point number and is signed by default). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ID associated with the new created notification, or <ref refid="trackle__utils__notifications_8h_1a853eccf40a39d485f2fd59c78bdc2bb9" kindref="member">Trackle_NotificationID_ERROR</ref> on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="trackle_utils_notifications.h" line="61" column="26" declfile="trackle_utils_notifications.h" declline="61" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="trackle__utils__notifications_8h_1a1bab5f153b8d7a9ec19930c540174a8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Trackle_Notification_update</definition>
        <argsstring>(Trackle_NotificationID_t notificationID, uint8_t newLevel, int value)</argsstring>
        <name>Trackle_Notification_update</name>
        <param>
          <type><ref refid="trackle__utils__notifications_8h_1a899e05cc33fea8c942c6562a8dbc2e13" kindref="member">Trackle_NotificationID_t</ref></type>
          <declname>notificationID</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>newLevel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Update the value of an notification. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>notificationID</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the notification to be updated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newLevel</parametername>
</parameternamelist>
<parameterdescription>
<para>Unsigned integer representing the level of the notification. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>New value of the notification. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if update was successful, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="trackle_utils_notifications.h" line="70" column="6" declfile="trackle_utils_notifications.h" declline="70" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="trackle__utils__notifications_8h_1a07321b8cf8a072a1711a3689ee8529c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Trackle_Notifications_startTask</definition>
        <argsstring>()</argsstring>
        <name>Trackle_Notifications_startTask</name>
        <briefdescription>
<para>Start the task that publishes periodically the notifications created. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if task started successfully, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="trackle_utils_notifications.h" line="76" column="6" declfile="trackle_utils_notifications.h" declline="76" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="trackle__utils__notifications_8h_1a6f90c0fc9384ac01d7efe17e1d890d48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * Trackle_Notification_getKey</definition>
        <argsstring>(Trackle_NotificationID_t notificationID)</argsstring>
        <name>Trackle_Notification_getKey</name>
        <param>
          <type><ref refid="trackle__utils__notifications_8h_1a899e05cc33fea8c942c6562a8dbc2e13" kindref="member">Trackle_NotificationID_t</ref></type>
          <declname>notificationID</declname>
        </param>
        <briefdescription>
<para>Get key of an notification. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>notificationID</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the notification. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the name/key of the notification (empty string if notificationID doesn&apos;t identify a valid notification) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="trackle_utils_notifications.h" line="83" column="12" declfile="trackle_utils_notifications.h" declline="83" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="trackle__utils__notifications_8h_1ad9d1c25687ac8b98b96d639e79149fc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Trackle_Notification_getLevel</definition>
        <argsstring>(Trackle_NotificationID_t notificationID)</argsstring>
        <name>Trackle_Notification_getLevel</name>
        <param>
          <type><ref refid="trackle__utils__notifications_8h_1a899e05cc33fea8c942c6562a8dbc2e13" kindref="member">Trackle_NotificationID_t</ref></type>
          <declname>notificationID</declname>
        </param>
        <briefdescription>
<para>Get level of an notification. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>notificationID</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the notification. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Actual level of the notification (-1 if notificationID doesn&apos;t identify a valid notification) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="trackle_utils_notifications.h" line="90" column="9" declfile="trackle_utils_notifications.h" declline="90" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="trackle__utils__notifications_8h_1a5228600a852cc31b11c864d59fd3f349" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Trackle_Notification_getValue</definition>
        <argsstring>(Trackle_NotificationID_t notificationID)</argsstring>
        <name>Trackle_Notification_getValue</name>
        <param>
          <type><ref refid="trackle__utils__notifications_8h_1a899e05cc33fea8c942c6562a8dbc2e13" kindref="member">Trackle_NotificationID_t</ref></type>
          <declname>notificationID</declname>
        </param>
        <briefdescription>
<para>Get value of an notification. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>notificationID</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the notification. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of the notification (-1 if notificationID doesn&apos;t identify a valid notification) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="trackle_utils_notifications.h" line="97" column="9" declfile="trackle_utils_notifications.h" declline="97" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Datatypes and functions for working with notifications. Read the full description to learn about notifications. </para>
    </briefdescription>
    <detaileddescription>
<para>Notifications are a construct that allows to let the cloud know that an event has happened.</para>
<para>Every notification is characterized by two elements:<itemizedlist>
<listitem><para>A (human readable) name that identifies the notification;</para>
</listitem><listitem><para>An event name that will be displayed by the Trackle platform when the notification is received.</para>
</listitem></itemizedlist>
</para>
<para>Moreover, at runtime, every notification has:<itemizedlist>
<listitem><para>A level, that is an unsigned int;</para>
</listitem><listitem><para>A value, that can be a signed or unsigned int, or a floating point.</para>
</listitem></itemizedlist>
</para>
<para>When the level of the notification changes, the event is published to the cloud, along with the actual value of the notification. The value&apos;s purpose is to give some context about the cause that triggered the change of the notification&apos;s level.</para>
<para>In order to create notifications, one must follow these steps:<orderedlist>
<listitem><para>Declare a variable of type <ref refid="trackle__utils__notifications_8h_1a899e05cc33fea8c942c6562a8dbc2e13" kindref="member">Trackle_NotificationID_t</ref>;</para>
</listitem><listitem><para>Assign the result of <ref refid="trackle__utils__notifications_8h_1a921414f16a2958bf73395ecfff985219" kindref="member">Trackle_Notification_create</ref> to this variable;</para>
</listitem><listitem><para>Repeat the steps from 1 to 2 for all the notifications that must be created;</para>
</listitem><listitem><para>Call <ref refid="trackle__utils__notifications_8h_1a07321b8cf8a072a1711a3689ee8529c1" kindref="member">Trackle_Notifications_startTask</ref> to start the notifications task.</para>
</listitem></orderedlist>
</para>
<para>Now, one can work with notifications (update, read, etc.) by using the remaining functions exposed by this file. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>TRACKLE_UTILS_NOTIFICATIONS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRACKLE_UTILS_NOTIFICATIONS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_timer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="trackle__utils__notifications_8h_1a0086e55aa5fbe53265f96bd7afbc8d92" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRACKLE_MAX_NOTIFICATIONS_NUM<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="trackle__utils__notifications_8h_1a853eccf40a39d485f2fd59c78bdc2bb9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Trackle_NotificationID_ERROR<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="trackle__utils__notifications_8h_1a899e05cc33fea8c942c6562a8dbc2e13" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="trackle__utils__notifications_8h_1a899e05cc33fea8c942c6562a8dbc2e13" kindref="member">Trackle_NotificationID_t</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="trackle__utils__notifications_8h_1a921414f16a2958bf73395ecfff985219" refkind="member"><highlight class="normal"><ref refid="trackle__utils__notifications_8h_1a899e05cc33fea8c942c6562a8dbc2e13" kindref="member">Trackle_NotificationID_t</ref><sp/><ref refid="trackle__utils__notifications_8h_1a921414f16a2958bf73395ecfff985219" kindref="member">Trackle_Notification_create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*eventName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,<sp/>uint16_t<sp/>scale,<sp/>uint8_t<sp/>numDecimals,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sign);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="trackle__utils__notifications_8h_1a1bab5f153b8d7a9ec19930c540174a8f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="trackle__utils__notifications_8h_1a1bab5f153b8d7a9ec19930c540174a8f" kindref="member">Trackle_Notification_update</ref>(<ref refid="trackle__utils__notifications_8h_1a899e05cc33fea8c942c6562a8dbc2e13" kindref="member">Trackle_NotificationID_t</ref><sp/>notificationID,<sp/>uint8_t<sp/>newLevel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="trackle__utils__notifications_8h_1a07321b8cf8a072a1711a3689ee8529c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="trackle__utils__notifications_8h_1a07321b8cf8a072a1711a3689ee8529c1" kindref="member">Trackle_Notifications_startTask</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="trackle__utils__notifications_8h_1a6f90c0fc9384ac01d7efe17e1d890d48" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="trackle__utils__notifications_8h_1a6f90c0fc9384ac01d7efe17e1d890d48" kindref="member">Trackle_Notification_getKey</ref>(<ref refid="trackle__utils__notifications_8h_1a899e05cc33fea8c942c6562a8dbc2e13" kindref="member">Trackle_NotificationID_t</ref><sp/>notificationID);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="trackle__utils__notifications_8h_1ad9d1c25687ac8b98b96d639e79149fc5" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="trackle__utils__notifications_8h_1ad9d1c25687ac8b98b96d639e79149fc5" kindref="member">Trackle_Notification_getLevel</ref>(<ref refid="trackle__utils__notifications_8h_1a899e05cc33fea8c942c6562a8dbc2e13" kindref="member">Trackle_NotificationID_t</ref><sp/>notificationID);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="trackle__utils__notifications_8h_1a5228600a852cc31b11c864d59fd3f349" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="trackle__utils__notifications_8h_1a5228600a852cc31b11c864d59fd3f349" kindref="member">Trackle_Notification_getValue</ref>(<ref refid="trackle__utils__notifications_8h_1a899e05cc33fea8c942c6562a8dbc2e13" kindref="member">Trackle_NotificationID_t</ref><sp/>notificationID);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="trackle_utils_notifications.h"/>
  </compounddef>
</doxygen>
